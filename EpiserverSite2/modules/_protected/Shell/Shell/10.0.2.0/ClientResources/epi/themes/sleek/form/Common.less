// claro/form/Common.css

/*========================= common css =========================*/

@import "../variables";

/* 'dijitTextBox' refers to 'dijit(TextBox|DateTextBox|CurrencyTextBox|...)' */

.Sleek {
    .dijitTextBox {
        color: @text-color;
    }
    .dijitTextBox {
        margin: 0 @input-margin @input-margin 0;
    }
}


.Sleek .dijitValidationTextBoxError .dijitValidationContainer {
    background: @erroricon-background-color url('images/error.png') center center no-repeat;
    border: solid @erroricon-background-color 0;
    width: 8px;
}

.Sleek .dijitTextBoxError .dijitValidationContainer {
    border-left-width: 1px;
}

.Sleek .dijitValidationTextBoxError .dijitValidationIcon {
    width: 0;
    border: none;
    background-color: transparent !important; /* so the INPUT doesn't obscure the border in rtl+a11y */
}

// Padding for the input area of TextBox based widgets, and corresponding padding for the
// down arrow button and the placeholder.   placeholder is explicitly listed  because
// dijitPlaceHolder is absolutely positioned, so padding set on dijitInputField
// won't affect it
.Sleek .dijitTextArea,
.Sleek .dijitInputField .dijitPlaceHolder {
    padding: 0 0 @textbox-padding @textbox-padding;
}

.dijitPlaceHolder { font-style: normal; } /* EPi */

.Sleek .dijitSelect .dijitInputField,
.Sleek .dijitTextBox .dijitInputField {
    // Subtract 1px from top/bottom because we add 1px to other nodes, see rules below.
    // Although we are theoretically only adding 1px to top/bottom browsers seem to pad inputs by 1px on left/right,
    // although that varies by so compensate for that too.
    padding: @textbox-padding - 1px  @textbox-padding;
}

.Sleek .dijitSelect,
.Sleek .dijitSelect .dijitButtonContents,
.Sleek .dijitTextBox,
.Sleek .dijitTextBox .dijitButtonNode {
    // color for (outer) border on *TextBox widgets, and border between input and buttons on ComboBox and Spinner
    border: @epi-input-border;
    transition-property: background-color, border;
    transition-duration: .35s;
}
.Sleek .dijitTextBox .dijitButtonNode {
    border-radius: 0 @epi-textbox-border-radius @epi-textbox-border-radius 0;
    padding: 0 2px;
}
.Sleek .dijitTextBox,
.Sleek .dijitTextBox .dijitInputContainer {
    background-color: @textbox-background-color;
    border-radius: @epi-textbox-border-radius;
}

/* hover */
.Sleek .dijitTextBoxHover,
.Sleek .dijitTextBoxHover .dijitButtonNode {
    border-color: @epi-textbox-hover-border-color;
    transition-duration: .25s;
}

/* error state */
.Sleek .dijitSelectError,
.Sleek .dijitSelectError .dijitButtonContents,
.Sleek .dijitTextBoxError,
.Sleek .dijitTextBoxError .dijitButtonNode {
    border-color: @error-border-color;
}
.Sleek .dijitTextBoxError,
.Sleek .dijitTextBoxError .dijitInputContainer {
    background-color: @textbox-error-background-color;
}

/* focused state */
.Sleek .dijitSelectFocused,
.Sleek .dijitSelectFocused .dijitButtonContents,
.Sleek .dijitSelectFocused .dijitButtonNode,
.Sleek .dijitTextBoxFocused,
.Sleek .dijitTextBoxFocused .dijitButtonNode {
    .epi-focused();
}
.Sleek .dijitTextBoxFocused {
    .epi-focused();
}
.Sleek .dijitTextBoxFocused .dijitInputContainer {
    background: @textbox-focused-background-color;
}

.Sleek .dijitSelectErrorFocused,
.Sleek .dijitSelectErrorFocused .dijitButtonContents,
.Sleek .dijitTextBoxErrorFocused,
.Sleek .dijitTextBoxErrorFocused .dijitButtonNode {
    border-color: @error-focused-border-color;
    border-radius: @epi-textbox-border-radius;
}

/* disabled state */
.Sleek .dijitSelectDisabled,
.Sleek .dijitSelectDisabled .dijitButtonContents,
.Sleek .dijitTextBoxDisabled,
.Sleek .dijitTextBoxDisabled .dijitButtonNode {
    border-color: @disabled-border-color;
}

.Sleek .dijitSelectDisabled,
.Sleek .dijitTextBoxDisabled,
.Sleek .dijitTextBoxDisabled .dijitInputContainer {
    background-color: @textbox-disabled-background-color;
    background-image: none;
    color: @disabled-text-color;
}

.dj_webkit .Sleek .dijitDisabled input {
    // because WebKit lightens disabled input/textarea no matter what color you specify
    color: darken(@disabled-text-color, 5%)
}

.dj_webkit .Sleek textarea.dijitTextAreaDisabled {
    // because WebKit lightens disabled input/textarea no matter what color you specify
    color: darken(@disabled-text-color, 40%)
}

/*========================= for special widgets =========================*/

/* Input boxes with an arrow (for a drop down) */

.Sleek .dijitSelect .dijitArrowButtonInner,
.Sleek .dijitComboBox .dijitArrowButtonInner {
    background-image: url("images/commonFormArrows.png");
    background-position:-35px 53%;
    background-repeat: no-repeat;
    border-radius: 0 @epi-textbox-border-radius @epi-textbox-border-radius 0;
    margin: 0;
    width:16px;
    border: 1px solid rgba(0,0,0,0);
}

.Sleek .dijitComboBox .dijitArrowButtonInner {
    border: none;
}

// Add 1px vertical padding to the <input> where user types and the validation icon,
// to match the 1px border on arrow button
.Sleek {
    .dijitTextBox .dijitInputInner{
        padding: 0;
    }
    .dijitValidationTextBox .dijitValidationContainer  {
        padding: 1px 1px 1px 0;
    }

    .dijitTextBox .dijitInputInner {
        width: 90% !important;
    }
}


.Sleek .dijitComboBox .dijitButtonNode {
    background: @default-input-gradient;
}

// Arrow "hover" effect:
// The arrow button should change color whenever the mouse is in a position such that clicking it
// will toggle the drop down.   That's either (1) anywhere over the ComboBox or (2) over the arrow
// button, depending on the openOnClick setting for the widget.
.Sleek .dijitComboBoxOpenOnClickHover .dijitButtonNode,
.Sleek .dijitComboBox .dijitDownArrowButtonHover {
    background-color:@arrowbutton-hovered-background-color;
}
.Sleek .dijitComboBoxOpenOnClickHover .dijitArrowButtonInner,
.Sleek .dijitComboBox .dijitDownArrowButtonHover .dijitArrowButtonInner {
    background-position:-70px 53%;
}

/* Arrow Button change when drop down is open */
.Sleek .dijitComboBox .dijitHasDropDownOpen {
    background: @default-input-gradient--active;
}
.Sleek .dijitComboBox .dijitHasDropDownOpen .dijitArrowButtonInner {
    background-position:-70px 53%;
}

/* disabled state */
.Sleek div.dijitComboBoxDisabled .dijitArrowButtonInner {
    /* specific selector set to override background-position setting from Button.js
     * (.Sleek .dijitComboBoxDisabled .dijitArrowButtonInner) */
    background-position:0 50%;
    background-color:@disabled-background-color;
}
.Sleek .dijitComboBoxDisabled .dijitButtonNode { border: 1px solid rgba(0,0,0,0); }



/*============================*/
/* EPi */
/*============================*/

/* General helper classes */
@epi-input-margin: 6px;

.epi-input-margin--left { margin-left: @epi-input-margin !important; }
.epi-input-margin--right { margin-right: @epi-input-margin !important; }

// All disabled inputs
.Sleek .dijitReadOnly {
    border-color: @disabled-border-color !important;
    box-shadow: none !important;
    opacity: .4;

    // Set opacity to 100% to override duplicate opacity inside elements
    * { opacity: 1; }

    .dijitInputContainer,
    &.dijitTextArea {
        background: #f0f0f0;
        color: #000;
    }
    .dijitCheckBoxInput { opacity: 0; }

    // Specifics for things like item collections
    &.dijitCheckBox {
        background-position: -75px;

        &Checked { background-position: -60px; }
    }
    &.dijitRadio {
        background-position: -165px;

        &Checked { background-position: -150px; }
    }

    &.epi-content-area-editor,
    .epi-content-area-editor,
    &.epi-content-area-wrapperFocused .epi-content-area-editor {
        border-style: dashed !important;
        border-color: @epi-dashed-border-color !important;
        .box-shadow(none);

        .epi-iconContextMenu { display: none !important; }
        .dijitTreeRowSelected { border: none !important; }
        .dgrid-focus { outline: none !important; }
    }
}

/* Needed to override Shell legacy styling */
.Sleek {
    .dijitInputContainer { overflow: hidden; }
}

.Sleek .dijitTextArea {
    box-shadow: none;
    font: inherit;
    padding: @textbox-padding;
    white-space: pre-wrap;
}

.Sleek textarea.epi-inline-edit {
    .epi-focused();
    border-radius: @epi-textbox-border-radius;
    min-height: 1em;
}

.Sleek {
    input::-webkit-input-placeholder, textarea::-webkit-input-placeholder {
      color: #a9a9a9;
    }
    input::-moz-placeholder, textarea::-moz-placeholder {
      color: #a9a9a9;
    }
    input:-ms-input-placeholder, textarea:-ms-input-placeholder {
      color: #a9a9a9;
    }
}
.Sleek .dijitTextBox.epi-searchInput {
    background: @textbox-background-color url("images/search.png") center right no-repeat;
    border-radius: 30px;
}
.Sleek .dijitTextBox.epi-searchInput .dijitInputInner::-ms-clear {
    display: none;
}

.Sleek .dijitTextBox.epi-searchInput .dijitInputContainer {
    background: transparent;
    padding-right: 25px;
}
.Sleek .dijitTextBox.epi-searchInput .dijitPlaceHolder {
    padding: 6px 5px 4px 10px;
}
.Sleek .dijitTextBox.epi-searchInput.dijitTextBoxFocused .dijitInputContainer {
    border-radius: 30px;
    padding-right: 0;
}

.Sleek .epi-form ul li {
    display: block;
    margin-bottom: 0.5em;
}
.Sleek .epi-form ul li label {
    display: inline-block;
    width: 100px;
}
.Sleek {
    .epi-contentDetails {
        background: linear-gradient(to bottom, #576a6e 0%, #49595c 100%);
        color: @text-color-inverted;
        padding: 22px 15px 5px 15px;
        position: relative;
        text-shadow: 0 -1px 0 rgba(0,0,0, .25);

        table {
            margin-bottom: 10px;

            td {
                padding: 2px 40px 2px 0;

                .epi-table-label {
                    color: darken(@text-color-inverted, 15%);
                }
            }
        }

        a {
            color: lighten(@link-color, 10%);
            cursor: pointer;
            margin-right: 10px;
            text-decoration: underline;
            text-shadow: 0 -1px 0 rgba(0,0,0,0);

            &:hover { color: lighten(@link-color, 10%); }
        }

        .dijitMenu {
            background-color: transparent;
            border: 0;
            margin: -1px 0;
        }
        .epi-floatleft {
            float: left;
        }
    }
}

/* Ribbon */
.Sleek {
    .epi-ribbon {
        color: @text-color-inverted;
        min-width: 89px;
        position: absolute;
        right: 10px;
        text-align: center;
        top: 0;
        z-index: 3;
    }
    .epi-stitch {
        background: url('../epi/images/stitch.png') top left repeat-y;
        height: 76px;
        width: 1px;
        position: absolute;
        top: 0;
        z-index: 2;
    }
    .epi-stitch-left { left: 3px; }
    .epi-stitch-right { right: 3px; }

    .epi-ribbonTop {
        padding: 10px 15px 20px;
        overflow: hidden;

        .epi-ribbonLabel {
            color: darken(@text-color-inverted, 15%);
        }
        .epi-ribbonId {
            display: block;
            font-size: 2em;
            .serif;
            line-height: .8;
        }
    }
    .epi-ribbonBottom {
        //If you change the height you will also need to change the rotation of the .epi-ribbonBottomPieces
        height: 35px;
        position: relative;
        overflow: hidden;

        .epi-ribbonBottomPiece {
            box-shadow: 0 2px 5px 0px rgba(0,0,0, .2);
            position: absolute;
            top: -100px;
            width: 100%;
            height: 100px;
        }

        .epi-ribbonBottomPiece-left {
            left: -50%;
            .transform-origin (bottom, right);

            // If you change the rotation you will also need to change the height of .epi-ribbonBottom
            -webkit-transform: rotate(-16deg);
                    transform: rotate(-16deg);
        }
        .epi-ribbonBottomPiece-right {
            right: -50%;
            .transform-origin (bottom, left);

            -webkit-transform: rotate(16deg);
                    transform: rotate(16deg);
        }
    }

    .epi-ribbonTop,
    .epi-ribbonBottomPiece {
        background: #3C3C3C;
    }
}
/*============================*/
/* Form Structure */
/*============================*/

.Sleek {
    .epi-form-container {
        background: @pane-background-color;
        min-height: 100%;

        &__section {
            background: @pane-background-color;
            box-sizing: border-box;
            margin: 16px 0;
            min-width: 460px;
            overflow: hidden;

            &__row {
                box-sizing: border-box;
                display: block;
                line-height: 16px;
                min-height: 44px;
                overflow: hidden;
                padding: 6px 0 8px 24px;

                > label {
                    box-sizing: border-box;
                    color: @epi-forms-label;
                    display: inline-block;
                    margin: 4px 0;
                    padding-right: 20px;
                    position: relative;
                    vertical-align: top;
                    white-space: normal;
                    width: 160px;

                    .dijitIcon {
                        position: absolute;
                        opacity: 0.45;
                        right: 0;
                        top: 1px;
                    }
                }
                .dijitCheckBox,
                .dijitRadio {
                    margin: 4px 2px 4px 0;
                }

                > fieldset {
                    border-bottom: 1px solid #e9e9e9;
                    margin-bottom: 16px;

                     > legend {
                        font-size: 1.5em;
                        padding: 0 0 0 24px;
                    }
                }

                .epi-form-container__section {
                    margin: 8px 0;

                    &__row--field {
                        margin: 0 12px;
                        padding: 8px 12px;
                    }
                }

                &--checkbox {
                    padding-left: 190px;

                    label {
                        box-sizing: border-box;
                        color: @epi-forms-label;
                        display: inline-block;
                        margin: 4px 0;
                        padding-right: 20px;
                        position: relative;
                        vertical-align: top;
                        white-space: normal;
                        width: auto;

                        .dijitIcon {
                            position: absolute;
                            opacity: 0.45;
                            right: 0;
                            top: 1px;
                        }
                    }
                }
            }

            &__row--parent {
                margin: 12px 0;
                padding: 0;
            }

            &__row--group {
                margin: 0;
                padding: 0;
            }

            &__row--full-width {
                > label {
                    width: auto;
                }
            }
        }
    }

    .epi-formContainer {
        background: @pane-background-color;
        min-height: 100%;

        .epi-containerLayoutTab {
            overflow: auto;
        }
    }

    .epi-containerLayout {
        background: @pane-background-color;
        box-sizing: border-box;
        overflow: hidden;
        padding: 15px 0;

        .epi-containerLayout { padding: 0; }

        .epi-parentContainer {
            border-bottom: 1px solid #f0f0f0;
            margin-bottom: 15px;
            padding: 0 10px 10px;
        }

        .epi-formsRow {
            clear: both;
            display: block;
            margin-bottom: 3px;
            overflow: hidden;
            padding: 4px 0;
            white-space: nowrap;

            label {
                color: @epi-forms-label;
                display: inline-block;
                float: left;
                margin: 0 20px 0 12px;
                padding-top: 4px;
                vertical-align: middle;
                white-space: normal;
                width: 140px;

                .dijitIcon {
                    margin-left: 5px;
                    float: right;
                    opacity: 0.45;
                }
            }


            &.epi-formsRow--fullWidthValue {
                > label {
                    float: none;
                    width: auto;
                }
                .epi-formsWidgetWrapper {
                    margin: 0 20px 0 12px;
                }
            }
            &,
            .epi-formsWidgetWrapper {
                line-height: 17px;
            }
            .epi-formsWidgetWrapper {
                padding: 4px 1px 0 0;

                .dijitInputContainer .dijitInline,
                .dijitButtonContents .dijitInline,
                .dijitTextBox,
                .epi-chromelessButton.epi-chromelessLinkButton,
                .dijitButton { vertical-align: middle; }

                .dijitInline,
                .dijitSelect .dijitSelectLabel { vertical-align: baseline; }
            }

            li {
                label {
                    margin-left: 0;
                    display: block;
                }
            }

            .epi-content-area-editor {
                margin: 0;
            }

            .dijitSelect {
                margin-left: 0;
            }
        }
        h2 {
            display: block;
            font-size: 1.5em;
            padding-bottom: 5px;
            margin: 0 0 9px 5px;
        }
        h3 {
            border-bottom: 1px solid #d9ddde;

            font-size: 1.2em;
            line-height: 1.6;
            margin: 0 0 1em 5px;
        }

        & > .dijitButton { margin: 1em 0 0 170px; }
    }

    // Needed for bug #106086
    .dijitDialog .epi-formsRow .epi-formsWidgetWrapper { display: inline-block; }

    .dijitDialogPaneContent {
        h2,
        h3 { margin-left: 0; }

        .epi-formContainer,
        .epi-containerLayout,
        .epi-containerLayout .epi-formsRow {
            overflow: visible;
        }

        .epi-containerLayout .epi-formsRow label {
            float: none;
            margin: 0 20px 5px 0;
            padding-left: 0;
            text-align: left;
            vertical-align: top;
        }
    }
    .epi-formsDescriptionHeader {
       margin: 1em 0 1em 15px;
    }
    .epi-formsHeaderContainer {
        border: 1px solid @bar-border-color;
        box-sizing: border-box;
        margin: 0 15px 15px;
        padding: 6px;

        h2 {
            display: inline;
            margin: 0;
        }
    }
}

/* Group Toggle */
.Sleek {
      .epi-groupToggle {
            background: #d4d4d4 url('images/toggleArrow.png') center center no-repeat;
            border-radius: 15px;
            display: none;
            height: 31px;
            line-height: 31px;
            margin: 0 12px -5px 0;
            width: 31px;

            -webkit-transition: background-color .3s ease-out, -webkit-transform .2s ease-out;
               -moz-transition: background-color .3s ease-out, -moz-transform .2s ease-out;
                -ms-transition: background-color .3s ease-out, -ms-transform .2s ease-out;
                 -o-transition: background-color .3s ease-out, -o-transform .2s ease-out;
                    transition: background-color .3s ease-out, transform .2s ease-out;

            -webkit-transform: rotate(0deg);
               -moz-transform: rotate(0deg);
                -ms-transform: rotate(0deg);
                 -o-transform: rotate(0deg);
                    transform: rotate(0deg);

        }
        .epi-groupToggle:hover {
            background-color: #898989;
            transition: .3s ease-out;

            -webkit-transform: rotate(-90deg);
                    transform: rotate(-90deg);
        }
}

/* Checkbox List */
.Sleek {
    .epi-checkBoxList {
        .epi-checkboxContainer {
            margin-bottom: 6px;

            .dijitCheckBox {
                vertical-align: top;
            }

            label {
                display: inline-block;
                margin: 4px 0 4px 2px;
            }
        }
    }

    .epi-containerLayout .epi-formsRow .epi-checkBoxList {
        .column(3,20);
        display: block;
        max-width: 800px;
        overflow: hidden;

        label {
            float: none;
            margin: 0 15px 0 0;
            overflow: hidden;
            padding: 0 0 0 5px;
            vertical-align: baseline;
            width: auto;
        }

        &.dijitError {
            border: 1px solid @error-border-color;
        }
    }

    .dijitDialog .epi-checkBoxList label {
        padding: 0 0 0 5px;
    }
}

/* DND */
.Sleek {
    &.dojoDndCopy,
    &.dojoDndMove {
        .epiTinyMCEEditor .epiTinyMCEEditor {
            border: 2px dashed @epi-drag-border-active;
            margin: -1px;

            &.epiTinyMCEEditorHover {
                border: 3px solid @epi-drag-border-hover;
                margin: -2px;
            }
        }

        .epi-dropArea,
        .dijitTextBox.dojoDndContainer {
            background: rgba(197,213,0,0.5);
            border: 1px dashed @epi-drag-border-active;
        }
        .epi-dropArea,
        .dijitTextBox.dijitHover {
            border: 1px solid @epi-drag-border-hover;
        }
    }

    &.dojoDndCopy,
    &.dojoDndMove {
        .dojoDndTargetDisabled {
            &.dijitTextBox {
                background-color: @textbox-background-color;
                border: @epi-input-border;
            }
        }
        .epi-dropTargetDisabled {
            &.epiTinyMCEEditor .epiTinyMCEEditor {
                border: solid 1px @border-color;
                margin: 0px;
            }
        }
    }
}



// CHROMELESS & FLAT INPUT ELEMENTS
//===============================================================================================================================
.Sleek {
    @input-text-padding: 3px 2px 4px 10px;

    // Shared
    .epi-chromeless,
    .epi-chromelessButton {
        // Remove EVERYTHING
        &,
        &.dijitSelect,
        &.dijitSelect .dijitButtonContents,
        .dijitButtonContents,
        .dijitButtonNode,
        .dijitInputContainer {
            background: transparent;
            background-color: transparent;
            background-image: none;
            box-shadow: none;
            border-color: rgba(0,0,0,0);
            text-shadow: none;
        }

        // Remove only background color
        &.dijitDisabled .dijitArrowButtonInner,
        .dijitArrowButtonInner {
            background-color: transparent;
            border: 1px solid rgba(0,0,0,0);
            display: none;
        }

        .dijitButtonText {
            min-width: 0;
        }
        .dijitInputField { padding: 0px 5px 1px; }

        &.dijitSelect .dijitArrowButton,
        .dijitArrowButton {
            background: none;

            .dijitArrowButtonInner {
                background-position: -35px 50%;
            }
        }

        // Buttons
        &.dijitButton { margin: 0; }

        &.dijitButton,
        &.dijitToggleButton {
            .dijitButtonNode { border-color: rgba(0,0,0,0) !important; }
        }

        // Selects

        // States
        &.dijitDisabled {
            opacity: .4;

            .dijitInputInner,
            .dijitSelectLabel { color: #f4f4f4; }
        }

        &.dijitFocused {
            .dijitButtonContents {
                box-shadow: none;
            }
            .dijitArrowButtonInner {
                margin-bottom: 0;
            }
        }

        .epi-chromelessLinkButton {
            margin: 0;

            .dijitButtonContents {
                padding: 0;
            }

            .dijitButtonText,
            .dijitButtonNode {
                border: none;
                height: auto;
                line-height: inherit;
                text-align: left;
            }
        }

        .dijitArrowButton .dijitArrowButtonInner,
        .dijitArrowButtonInner {
            background-image: url("images/commonFormArrows.png");
            background-position: -35px 60%;
            width: 16px;
        }

        // Modifiers
        &--icon-only {
            .dijitButtonContents {
                padding-top: 4px;
            }
            .dijitButtonText {
                display: none;
            }
        }
        &--text-only {
            .dijitButtonNode {
                border: none;
                padding: 0;
            }
            .dijitButtonText { padding: 0; }
        }
        &--with-arrow {
            .dijitArrowButtonInner { display: inline-block; }
        }
        &--inverted {
            .dijitArrowButtonInner {
                background-image: url("images/buttonArrows_inv.png");
                background-position: -52px 50%;
            }
            .dijitButtonText {
                color: @text-color-white;
                text-shadow: 0px -1px 0px rgba(0, 0, 0, 0.5);
            }
        }
    }

    // Legacy Styles
    .epi-chromelessButton {
        .dijitButtonNode {
            padding: 0;
        }
    }

    .epi-flat,
    .epi-flatButton {
        @input-text-padding: 0 .3em;

        // Shared
        background: @epi-flat-background;
        border-radius: @button-border-radius;


        .dijitInputInner,
        .dijitSelectLabel {
            color: @text-color;
        }

        .dijitButtonText {
            color: @text-color;
            padding: @input-text-padding;
        }

        // Icons
        .dijitIcon + .dijitButtonText {
            padding-left: 4px;
        }
        // This duplicates the .dijitButtonText selector above, but with much more specificity making the text color unable to be overridden by
        // --light or --dark modifier classes. The padding is therefore duplicated for readibility.
        .dijitIcon.dijitNoIcon + .dijitButtonText {
            padding: @input-text-padding;
        }


        // Buttons
        &.dijitButton {
            .dijitButtonNode {
                background: transparent;
                border-radius: @button-border-radius;
                padding: 2px 12px;
            }
        }

        // Selects
        &.dijitSelect {
            background: @epi-flat-background;
            border-radius: @button-border-radius;

            .dijitButtonContents {
                background: transparent;
                border-right-width: 0;
                border-radius: 0;
                padding-left: 4px;
            }
            .dijitArrowButton {
                background: transparent;
                border-radius: 0;
                padding-right: 4px;

                .dijitArrowButtonInner { background-position: -35px 60%;}
            }
        }
        .dijitArrowButton .dijitArrowButtonInner,
        .dijitArrowButtonInner {
            background-image: url("images/commonFormArrows.png");
            background-position:-35px 60%;
            width: 16px;
        }



        //States
        // Disabled
        &.dijitDisabled {
            input { color: @text-color; }
        }

        // Error
        &.dijitError {
            background: @erroricon-background-color;

            .dijitValidationContainer {
                display: none;
            }
        }

        // Focus
        &.dijitOpenedFocused {
            &,
            .dijitButtonContents,
            .dijitArrowButton {
                background: darken(@epi-flat-background, 10%);
            }
        }

        &--dark {
            // Shared
            background: @epi-flat-background--dark;

            .dijitInputInner,
            .dijitSelectLabel {
                color: @text-color-white;
            }

            .dijitButtonText {
                color: @text-color-white;
                text-shadow: 0 -1px 0 rgba(0,0,0,0.15);
            }


            // Buttons
            &.dijitButton {
                .dijitButtonText {
                    text-shadow: none;
                }
            }

            // Selects
            &.dijitSelect {
                .dijitButtonContents {
                    background: @epi-flat-background--dark;
                }
                .dijitArrowButton {
                    background: @epi-flat-background--dark;
                }
            }
            .dijitArrowButton .dijitArrowButtonInner,
            .dijitArrowButtonInner {
                background-image: url("images/buttonArrows_inv.png");
                background-position: -52px 50%;
            }


            //States
            // Disabled
            &.dijitDisabled {
                input { color: @text-color-white; }
            }

            // Focus
            // Local variable did not override the base flat background so we need to duplicate the class here
            &.dijitOpenedFocused {
                .dijitButtonContents,
                .dijitArrowButton {
                    background: darken(@epi-flat-background--dark, 10%);
                }
            }
        }
    }

    // Select input w. set width and icon

    .epi-gadget__selector {
        .dijitButtonContents {
          padding: 0 2px;
        }
        .dijitButtonText,
        .dijitSelectLabel {
          width: 100px;
          text-overflow: ellipsis;
          overflow: hidden;
          /* TODO: review of text align is still necessary after new style is applied
                       currently needs to override ".Sleek .dijitButtonText" (text-align: center;) */
          text-align: left;
          /* TODO: padding set to 0 as a temporary fix until the new button stylings are applied
                       need to be reviewed after (remove after styleguide framework merge) */
          padding: 0;
        }
    }


    /* Auto complete text area */
    .epi-autocomplete-textarea {
        textarea { min-height: auto; }

        &--chat-icon {
            position: relative;

            &::before {
                background: url('../epi/images/icons/commonIcons16x16.png') -48px -736px no-repeat;
                content: "";
                position: absolute;
                height: 16px;
                width: 16px;
                top: 7px;
                left: 6px;
            }

            textarea {
                padding-left: 25px;
            }
        }
    }
    /* Auto complete suggested dropdown list */
    .dgrid {
        &.epi-autocomplete-list {
            background-color: @popup-background-color;
            border: 1px solid @popup-border-color;
            height: 294px;

            .dgrid-scroller {
                margin: 12px 0 !important;

                .dgrid-row-odd, .dgrid-row-even {
                    background: @popup-background-color;
                    height: 17px;
                }
                .dgrid-selected {
                    background: @epi-selected-item;
                }
            }
        }
    }
}
